version: "3.8"

services:
  # mongodb:
  #   image: mongo:6.0.1
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - awesome

  # devapi: # back
  #   depends_on:
  #     - mongodb
  #   # platform: linux/amd64
  #   build:
  #     context: .
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - DB_HOST=$DB_HOST
  #     - DB_NAME=$DB_NAME
  #     - DB_PORT=$DB_PORT
  #     - NODE_ENV=$NODE_ENV
  #     - PTH=$PTH
  #     - PORT=3000
  #     - EMAIL_USER=$EMAIL_USER
  #     - EMAIL_PASS=$EMAIL_PASS
  #     - EMAIL_HOST=$EMAIL_HOST
  #     - EMAIL_PORT=$EMAIL_PORT
  #     - EMAIL_FROM=$EMAIL_FROM
  #     - HOST=$HOST
  #   networks:
  #     - awesome

  my-app:
    image: cr.yandex/${REGISTRY_ID}/tmp:latest
    build:
      context: .
    environment:
      env_file:
        .env
    ports:
      - "${PORT:-3000}:3000"
    restart: always
    networks:
      - awesome
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  nginx:
    image: nginx
    restart: always
    container_name: nginx
    volumes:
      # - ./nginx/certs:/etc/nginx/certs
      - ./data/nginx/core/default.conf:/etc/nginx/conf.d/default.conf
      - ./data/nginx/logs/:/var/log/nginx/
      # - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

    depends_on:
     - my-app
    ports:
      - "80:80"
      - "443:443"
    networks:
      - awesome
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   networks:
  #     - awesome
  #   depends_on:
  #    - nginx

networks:
  awesome:
    driver: bridge
